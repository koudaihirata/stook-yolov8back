name: Build and Deploy to AWS Lambda

on:
    push:
        branches:
            - feature/*
            - hotfix/*
            - release/*
    pull_request:
        branches:
            - feature/*
            - hotfix/*

jobs:
    pytest:
        name: Execute pytest for lambda function
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.9"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pipenv
                  pipenv lock
                  pipenv sync --dev

            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install dependencies for node
              run: |
                  yarn install --frozen-lockfile

            - name: Exec pytest
              run: |
                  pipenv run test

            - name: Pytest coverage comment
              if: always()
              uses: MishaKav/pytest-coverage-comment@main
              with:
                  pytest-coverage-path: ./pytest-coverage.txt
                  junitxml-path: ./pytest.xml

    build:
        name: Confirm the diff and deploy to AWS Lambda
        if: ${{ !failure() && github.ref == 'refs/heads/release/*' }}
        needs: pytest
        runs-on: ubuntu-latest

        strategy:
            matrix:
                site: ["prod"]

        permissions:
            id-token: write
            contents: read
            pull-requests: write

        steps:
            - uses: actions/checkout@v4

            - name: AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-northeast-3

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: Update Lambda function
              run: |
                  aws lambda update-function-code \
                    --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} \
                    --image-uri ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
